name: Deploy to Minikube using GitHub Actions

on: [push]

jobs:
  job1:
    runs-on: ubuntu-latest
    name: Build Node.js Docker Image and Deploy to Minikube
    steps:
    - uses: actions/checkout@v2
    - name: Start Minikube
      uses: medyagh/setup-minikube@master
    - name: Try the cluster
      run: kubectl get pods -A
    - name: Build Docker Image
      run: |
        export SHELL=/bin/bash
        eval $(minikube -p minikube docker-env)
        docker build -f ./Dockerfile -t devopshint/node-app:latest .
        echo -n "verifying images:"
        docker images
    - name: Deploy to Minikube
      run:
        kubectl apply -f k8s-node-app.yaml
    - name: Check Pods Status
      run: kubectl get pods -A
    - name: Check Kubernetes Events
      run: kubectl get events --sort-by='.lastTimestamp' -n default
    - name: Wait for Node.js Pod to be Running
      run: |
        POD_NAME=$(kubectl get pods -l app=nodejs-app -o jsonpath='{.items[0].metadata.name}')
        
        # Timeout and interval settings
        TIMEOUT=300  # Timeout in seconds (5 minutes)
        WAIT_INTERVAL=10  # Interval to check pod status in seconds
        START_TIME=$(date +%s)

        # Loop to check pod status
        while true; do
          POD_STATUS=$(kubectl get pod "$POD_NAME" -o jsonpath='{.status.phase}')
          
          # Check if the pod is running
          if [[ "$POD_STATUS" == "Running" ]]; then
            echo "Pod is running: $POD_NAME"
            break
          fi

          # Check for timeout
          CURRENT_TIME=$(date +%s)
          ELAPSED_TIME=$((CURRENT_TIME - START_TIME))

          if [[ "$ELAPSED_TIME" -ge "$TIMEOUT" ]]; then
            echo "Timeout reached, pod did not start within $TIMEOUT seconds."
            exit 1
          fi

          # Wait for the specified interval before checking again
          sleep "$WAIT_INTERVAL"
        done
    - name: Get Logs for Node.js Pod
      run: |
        POD_NAME=$(kubectl get pods -l app=nodejs-app -o jsonpath='{.items[0].metadata.name}')
        kubectl logs $POD_NAME -n default
    - name: List Docker Images in Minikube
      run: |
        eval $(minikube -p minikube docker-env)
        docker images
    - name: Check Minikube Status
      run: minikube status
    - name: Verify Minikube Service
      run: |
        minikube service list
        minikube service nodejs-app --url
